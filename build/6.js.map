{"version":3,"sources":["../../src/pages/login/login.module.ts","../../node_modules/rxjs/add/observable/merge.js","../../src/providers/user/user.ts","../../node_modules/@ionic-native/network/index.js","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACA;AAEZ;AACqB;AAczD;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAZ3B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;aACpC;YACD,SAAS,EAAE;gBACT,sEAAO;gBACP,0EAAY;aACb;SACF,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;ACnB5B;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;;;;;;;;;;ACJ2C;AACN;AACN;AAEQ;AACE;AAE6B;AAGtE;IAIE;;OAEG;IACH,sBAAmB,IAAU,EAAS,IAA0B,EAAS,OAAgB,EAAS,MAAc;QAA7F,SAAI,GAAJ,IAAI,CAAM;QAAS,SAAI,GAAJ,IAAI,CAAsB;QAAS,YAAO,GAAP,OAAO,CAAS;QAAS,WAAM,GAAN,MAAM,CAAQ;QAC9G,uBAAuB;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC;IACpC,CAAC;IAED;;OAEG;IACH,4BAAK,GAAL,UAAM,IAAY;QAChB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC1D,CAAC;IAED;;OAEG;IACH,iCAAU,GAAV,UAAW,IAAY;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC1D,CAAC;IA1BU,YAAY;QADxB,yEAAU,EAAE;yCAQc,2DAAI,EAAe,0FAAoB,EAAkB,+DAAO,EAAiB,6DAAM;OAPrG,YAAY,CA2BxB;IAAD,mBAAC;CAAA;AA3BwB;;;;;;;;;;;;;;ACVzB;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACuD;AACvD;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA,+CAA+C,QAAQ;AACvD;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;;;;;;;;;;;;;ACzI0C;AAC0B;AACiC;AAE5C;AACoB;AAO7E;IAGE;;OAEG;IACH,mBAAmB,OAAsB,EAAS,SAAoB,EAAU,WAAwB,EAC9F,WAA8B,EAAU,SAA0B,EAAU,YAA0B,EACtG,UAAgC,EAAU,KAAa;QAF9C,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,gBAAW,GAAX,WAAW,CAAa;QAC9F,gBAAW,GAAX,WAAW,CAAmB;QAAU,cAAS,GAAT,SAAS,CAAiB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QACtG,eAAU,GAAV,UAAU,CAAsB;QAAU,UAAK,GAAL,KAAK,CAAQ;QAC/D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,yBAAK,GAAL;QAAA,iBAqBC;QApBC,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEtB;;WAEG;QACH,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,cAAI;YAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,EAAE,EAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBACxB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACpC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACnB,EAAE,EAAC,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC5E,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;wBAC7C,KAAI,CAAC,iBAAiB,EAAE,CAAC;wBACzB,KAAK,CAAC;oBACR,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,qCAAiB,GAAjB;QACE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;IACxC,CAAC;IAED;;OAEG;IACH,wCAAoB,GAApB;QACE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;IAC3C,CAAC;IArDU,SAAS;QAJrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;4JAO4B,4EAAiC,CAA2C;YACjF,8FAAsC,iEAAmD;YAC1F,MAA2C;OARtD,SAAS,CAsDrB;IAAD,CAAC;AAAA;SAtDY,SAAS,e","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { Network } from '@ionic-native/network';\n\nimport { LoginPage } from './login';\nimport { UserProvider } from '../../providers/user/user';\n\n@NgModule({\n  declarations: [\n    LoginPage\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage)\n  ],\n  providers: [\n    Network,\n    UserProvider\n  ]\n})\nexport class LoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar merge_1 = require('../../observable/merge');\nObservable_1.Observable.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/observable/merge.js\n// module id = 287\n// module chunks = 0 1 2 3 4 5 6","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\nimport { Events } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\n\nimport { BaseSettingsProvider } from '../base-settings/base-settings';\n\n@Injectable()\nexport class UserProvider {\n  public api_url: string;\n  public users_api_url: string;\n\n  /**\n   * Initialize\n   */\n  constructor(public http: Http, public base: BaseSettingsProvider, public storage: Storage, public events: Events) {\n    // Generate the API URL\n    this.api_url = base.url + '/auth';\n  }\n\n  /**\n   * Get Targeted Listing\n   */\n  login(data: object) {\n    let url = this.api_url + '/login';\n    return this.http.post(url, data).map(res => res.json());\n  }\n\n  /**\n   * Check User Token Validity\n   */\n  checkToken(data: object) {\n    let url = this.api_url + '/check-token';\n    return this.http.post(url, data).map(res => res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/user.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, CordovaProperty, Plugin, CordovaCheck, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/merge';\n/**\n * @name Network\n * @description\n * Requires Cordova plugin: cordova-plugin-network-information. For more info, please see the [Network plugin docs](https://github.com/apache/cordova-plugin-network-information).\n *\n * @usage\n * ```typescript\n * import { Network } from '@ionic-native/network';\n *\n * constructor(private network: Network) { }\n *\n * ...\n *\n * // watch network for a disconnect\n * let disconnectSubscription = this.network.onDisconnect().subscribe(() => {\n *   console.log('network was disconnected :-(');\n * });\n *\n * // stop disconnect watch\n * disconnectSubscription.unsubscribe();\n *\n *\n * // watch network for a connection\n * let connectSubscription = this.network.onConnect().subscribe(() => {\n *   console.log('network connected!');\n *   // We just got a connection but we need to wait briefly\n *\n   // before we determine the connection type. Might need to wait.\n *   // prior to doing any api requests as well.\n *   setTimeout(() => {\n *     if (this.network.type === 'wifi') {\n *       console.log('we got a wifi connection, woohoo!');\n *     }\n *   }, 3000);\n * });\n *\n * // stop connect watch\n * connectSubscription.unsubscribe();\n *\n * ```\n * @advanced\n * The `type` property will return one of the following connection types: `unknown`, `ethernet`, `wifi`, `2g`, `3g`, `4g`, `cellular`, `none`\n */\nvar Network = (function (_super) {\n    __extends(Network, _super);\n    function Network() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns an observable to watch connection changes\n     * @return {Observable<any>}\n     */\n    Network.prototype.onchange = function () {\n        return Observable.merge(this.onConnect(), this.onDisconnect());\n    };\n    /**\n     * Get notified when the device goes offline\n     * @returns {Observable<any>} Returns an observable.\n     */\n    Network.prototype.onDisconnect = function () { return; };\n    /**\n     * Get notified when the device goes online\n     * @returns {Observable<any>} Returns an observable.\n     */\n    Network.prototype.onConnect = function () { return; };\n    Network.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Network.ctorParameters = function () { return []; };\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], Network.prototype, \"type\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], Network.prototype, \"downlinkMax\", void 0);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Observable)\n    ], Network.prototype, \"onchange\", null);\n    __decorate([\n        Cordova({\n            eventObservable: true,\n            event: 'offline'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Observable)\n    ], Network.prototype, \"onDisconnect\", null);\n    __decorate([\n        Cordova({\n            eventObservable: true,\n            event: 'online'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Observable)\n    ], Network.prototype, \"onConnect\", null);\n    Network = __decorate([\n        Plugin({\n            pluginName: 'Network',\n            plugin: 'cordova-plugin-network-information',\n            pluginRef: 'navigator.connection',\n            repo: 'https://github.com/apache/cordova-plugin-network-information',\n            platforms: ['Amazon Fire OS', 'Android', 'Browser', 'iOS', 'Windows']\n        })\n    ], Network);\n    return Network;\n}(IonicNativePlugin));\nexport { Network };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/network/index.js\n// module id = 301\n// module chunks = 5 6","import { Component } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { IonicPage, NavController, NavParams, LoadingController, ToastController, Events } from 'ionic-angular';\n\nimport { UserProvider } from '../../providers/user/user';\nimport { IonicStorageProvider } from '../../providers/base-settings/storage';\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n  public loginForm: FormGroup;\n\n  /**\n   * Constructor Method\n   */\n  constructor(public navCtrl: NavController, public navParams: NavParams, private formBuilder: FormBuilder,\n    private loadingCtrl: LoadingController, private toastCtrl: ToastController, private userProvider: UserProvider,\n    private ionStorage: IonicStorageProvider, private event: Events) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Logic to Check User\n   */\n  login() {\n    let formdata = this.loginForm.value;\n    console.log(formdata);\n\n    /**\n     * Get Locally Stored Session Data using Storage Provider\n     */\n    this.ionStorage.getItems('sessionusers').then(data => {\n      console.log(data);\n      let susers = [];\n      if(data && data != null) {\n        for(let i = 0; i < data.length; i++) {\n          let user = data[i];\n          if(user.username == formdata.username && user.password == formdata.password) {\n            this.ionStorage.setItem('sessionuser', user);\n            this.gotoDashboardPage();\n            break;\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Go to Dashboard Page\n   */\n  gotoDashboardPage() {\n    this.navCtrl.setRoot('DashboardPage');\n  }\n\n  /**\n   * Go to Registration / Create Account Page\n   */\n  gotoRegistrationPage() {\n    this.navCtrl.setRoot('RegistrationPage');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}